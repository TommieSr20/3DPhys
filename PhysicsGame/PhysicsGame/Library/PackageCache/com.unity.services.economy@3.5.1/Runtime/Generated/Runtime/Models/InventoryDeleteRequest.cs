//-----------------------------------------------------------------------------
// <auto-generated>
//     This file was generated by the C# SDK Code Generator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//-----------------------------------------------------------------------------


using System;
using System.Collections.Generic;
using System.Linq;
using UnityEngine.Scripting;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Unity.Services.Economy.Internal.Http;



namespace Unity.Services.Economy.Internal.Models
{
    /// <summary>
    /// The request body has been deprecated in favor of using query parameters due to inconsistent HTTP client support for sending request bodies for DELETE requests. Please use the corresponding query parameters instead, which will take precedence over any request body properties if both are present.
    /// </summary>
    [Preserve]
    [DataContract(Name = "inventory-delete-request")]
    internal class InventoryDeleteRequest
    {
        /// <summary>
        /// The request body has been deprecated in favor of using query parameters due to inconsistent HTTP client support for sending request bodies for DELETE requests. Please use the corresponding query parameters instead, which will take precedence over any request body properties if both are present.
        /// </summary>
        /// <param name="writeLock">The write lock for the inventory item instance. This property has been deprecated. Please use the writeLock query parameter instead.</param>
        [Preserve]
        public InventoryDeleteRequest(string writeLock = default)
        {
            WriteLock = writeLock;
        }

        /// <summary>
        /// The write lock for the inventory item instance. This property has been deprecated. Please use the &#x60;writeLock&#x60; query parameter instead.
        /// </summary>
        [Preserve]
        [DataMember(Name = "writeLock", EmitDefaultValue = false)]
        public string WriteLock{ get; }

        /// <summary>
        /// Formats a InventoryDeleteRequest into a string of key-value pairs for use as a path parameter.
        /// </summary>
        /// <returns>Returns a string representation of the key-value pairs.</returns>
        internal string SerializeAsPathParam()
        {
            var serializedModel = "";

            if (WriteLock != null)
            {
                serializedModel += "writeLock," + WriteLock;
            }
            return serializedModel;
        }

        /// <summary>
        /// Returns a InventoryDeleteRequest as a dictionary of key-value pairs for use as a query parameter.
        /// </summary>
        /// <returns>Returns a dictionary of string key-value pairs.</returns>
        internal Dictionary<string, string> GetAsQueryParam()
        {
            var dictionary = new Dictionary<string, string>();

            if (WriteLock != null)
            {
                var writeLockStringValue = WriteLock.ToString();
                dictionary.Add("writeLock", writeLockStringValue);
            }

            return dictionary;
        }
    }
}
